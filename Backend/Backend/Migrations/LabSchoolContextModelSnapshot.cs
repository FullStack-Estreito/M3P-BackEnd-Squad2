// <auto-generated />
using System;
using Backend.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Backend.Migrations
{
    [DbContext(typeof(LabSchoolContext))]
    partial class LabSchoolContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Backend.Models.Atendimento", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Aluno_Id")
                        .HasColumnType("int");

                    b.Property<string>("Data")
                        .IsRequired()
                        .HasColumnType("VARCHAR");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("VARCHAR");

                    b.Property<int>("Pedagogo_Id")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("Aluno_Id");

                    b.HasIndex("Pedagogo_Id");

                    b.ToTable("Atendimentos");
                });

            modelBuilder.Entity("Backend.Models.Avaliacao", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Data")
                        .IsRequired()
                        .HasColumnType("VARCHAR");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("VARCHAR");

                    b.Property<string>("Materia")
                        .IsRequired()
                        .HasColumnType("VARCHAR");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(8)
                        .HasColumnType("VARCHAR");

                    b.Property<double>("Nota")
                        .HasColumnType("float");

                    b.Property<double>("Pontuacao_Maxima")
                        .HasColumnType("float");

                    b.Property<int>("Professor_Id")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("Professor_Id");

<<<<<<< HEAD
                    b.ToTable("Avaliacao");
=======
                    b.ToTable("Avaliacoes");
>>>>>>> c1622b38cb999d6564f1c1ac1282bd7d8a1ce5ee
                });

            modelBuilder.Entity("Backend.Models.Empresa", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Demais_Infos")
                        .IsRequired()
<<<<<<< HEAD
=======
                        .HasMaxLength(50)
>>>>>>> c1622b38cb999d6564f1c1ac1282bd7d8a1ce5ee
                        .HasColumnType("VARCHAR");

                    b.Property<string>("Logotipo_URL")
                        .IsRequired()
<<<<<<< HEAD
=======
                        .HasMaxLength(100)
>>>>>>> c1622b38cb999d6564f1c1ac1282bd7d8a1ce5ee
                        .HasColumnType("VARCHAR");

                    b.Property<string>("Nome_Empresa")
                        .IsRequired()
<<<<<<< HEAD
=======
                        .HasMaxLength(50)
>>>>>>> c1622b38cb999d6564f1c1ac1282bd7d8a1ce5ee
                        .HasColumnType("VARCHAR");

                    b.Property<string>("Paleta_Cores")
                        .IsRequired()
<<<<<<< HEAD
=======
                        .HasMaxLength(50)
>>>>>>> c1622b38cb999d6564f1c1ac1282bd7d8a1ce5ee
                        .HasColumnType("VARCHAR");

                    b.Property<string>("Slogan")
                        .IsRequired()
<<<<<<< HEAD
=======
                        .HasMaxLength(50)
>>>>>>> c1622b38cb999d6564f1c1ac1282bd7d8a1ce5ee
                        .HasColumnType("VARCHAR");

                    b.HasKey("Id");

<<<<<<< HEAD
                    b.ToTable("Empresa");
=======
                    b.ToTable("Empresas");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Demais_Infos = "Silicon Island",
                            Logotipo_URL = "wwww.Success.com",
                            Nome_Empresa = "Sucesso Total",
                            Paleta_Cores = "RGB",
                            Slogan = "Vitória"
                        });
>>>>>>> c1622b38cb999d6564f1c1ac1282bd7d8a1ce5ee
                });

            modelBuilder.Entity("Backend.Models.Endereco", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Bairro")
                        .IsRequired()
<<<<<<< HEAD
=======
                        .HasMaxLength(65)
>>>>>>> c1622b38cb999d6564f1c1ac1282bd7d8a1ce5ee
                        .HasColumnType("VARCHAR");

                    b.Property<string>("CEP")
                        .IsRequired()
<<<<<<< HEAD
=======
                        .HasMaxLength(15)
>>>>>>> c1622b38cb999d6564f1c1ac1282bd7d8a1ce5ee
                        .HasColumnType("VARCHAR");

<<<<<<< HEAD
                    b.Property<string>("Complemento")
=======
                    b.Property<string>("Cidade")
                        .IsRequired()
<<<<<<< HEAD
=======
                        .HasMaxLength(40)
>>>>>>> c1622b38cb999d6564f1c1ac1282bd7d8a1ce5ee
                        .HasColumnType("VARCHAR");

                    b.Property<string>("Complemento")
                        .IsRequired()
<<<<<<< HEAD
=======
>>>>>>> e0f3b7e540a76181b45605f7e6acdbdfc8d1de98
                        .HasMaxLength(60)
>>>>>>> c1622b38cb999d6564f1c1ac1282bd7d8a1ce5ee
                        .HasColumnType("VARCHAR");

                    b.Property<string>("Localidade")
                        .IsRequired()
<<<<<<< HEAD
                        .HasMaxLength(40)
=======
<<<<<<< HEAD
=======
                        .HasMaxLength(20)
>>>>>>> c1622b38cb999d6564f1c1ac1282bd7d8a1ce5ee
>>>>>>> e0f3b7e540a76181b45605f7e6acdbdfc8d1de98
                        .HasColumnType("VARCHAR");

                    b.Property<string>("Logradouro")
                        .IsRequired()
<<<<<<< HEAD
=======
                        .HasMaxLength(55)
>>>>>>> c1622b38cb999d6564f1c1ac1282bd7d8a1ce5ee
                        .HasColumnType("VARCHAR");

                    b.Property<string>("Numero")
                        .IsRequired()
<<<<<<< HEAD
=======
                        .HasMaxLength(8)
>>>>>>> c1622b38cb999d6564f1c1ac1282bd7d8a1ce5ee
                        .HasColumnType("VARCHAR");

                    b.Property<string>("UF")
                        .IsRequired()
<<<<<<< HEAD
                        .HasMaxLength(20)
=======
<<<<<<< HEAD
=======
                        .HasMaxLength(65)
>>>>>>> c1622b38cb999d6564f1c1ac1282bd7d8a1ce5ee
>>>>>>> e0f3b7e540a76181b45605f7e6acdbdfc8d1de98
                        .HasColumnType("VARCHAR");

                    b.HasKey("Id");

                    b.ToTable("Enderecos");
<<<<<<< HEAD
=======

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Bairro = "Lagoon",
                            CEP = "88062015",
                            Complemento = "Centrinho",
                            Localidade = "Floripa",
                            Logradouro = "Nsa Senhora",
                            Numero = "3432",
                            UF = "SC"
                        });
>>>>>>> c1622b38cb999d6564f1c1ac1282bd7d8a1ce5ee
                });

            modelBuilder.Entity("Backend.Models.Exercicio", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Aluno_Id")
                        .HasColumnType("int");

                    b.Property<string>("Data_Conclusao")
                        .IsRequired()
                        .HasColumnType("VARCHAR");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("VARCHAR");

                    b.Property<string>("Materia")
                        .IsRequired()
                        .HasColumnType("VARCHAR");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("VARCHAR");

                    b.Property<int>("Professor_Id")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("Aluno_Id");

                    b.HasIndex("Professor_Id");

                    b.ToTable("Exercicios");
                });

            modelBuilder.Entity("Backend.Models.Log", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Acao")
                        .IsRequired()
<<<<<<< HEAD
=======
                        .HasMaxLength(30)
>>>>>>> c1622b38cb999d6564f1c1ac1282bd7d8a1ce5ee
                        .HasColumnType("VARCHAR");

                    b.Property<DateTime>("Data")
                        .HasColumnType("datetime2");

                    b.Property<string>("Detalhes")
                        .IsRequired()
<<<<<<< HEAD
=======
                        .HasMaxLength(60)
>>>>>>> c1622b38cb999d6564f1c1ac1282bd7d8a1ce5ee
                        .HasColumnType("VARCHAR");

                    b.Property<int>("Usuario_Id")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("Usuario_Id");

                    b.ToTable("Logs");
                });

<<<<<<< HEAD
=======
            modelBuilder.Entity("Backend.Models.Login", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("VARCHAR");

                    b.Property<string>("Senha")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("VARCHAR");

                    b.HasKey("Id");

                    b.ToTable("Logins");
                });

>>>>>>> c1622b38cb999d6564f1c1ac1282bd7d8a1ce5ee
            modelBuilder.Entity("Backend.Models.Usuario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CPF")
                        .IsRequired()
<<<<<<< HEAD
                        .HasColumnType("VARCHAR");

                    b.Property<string>("Codigo_Registro_Professor")
                        .IsRequired()
                        .HasColumnType("VARCHAR");

                    b.Property<string>("Email")
                        .IsRequired()
=======
                        .HasMaxLength(64)
                        .HasColumnType("VARCHAR");

                    b.Property<int>("Codigo_Registro_Professor")
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(64)
>>>>>>> c1622b38cb999d6564f1c1ac1282bd7d8a1ce5ee
                        .HasColumnType("VARCHAR");

                    b.Property<int>("Empresa_Id")
                        .HasColumnType("int");

                    b.Property<int>("Endereco_Id")
                        .HasColumnType("int");

                    b.Property<string>("Genero")
                        .IsRequired()
<<<<<<< HEAD
=======
                        .HasMaxLength(64)
>>>>>>> c1622b38cb999d6564f1c1ac1282bd7d8a1ce5ee
                        .HasColumnType("VARCHAR");

                    b.Property<string>("Matricula_Aluno")
                        .IsRequired()
<<<<<<< HEAD
=======
                        .HasMaxLength(15)
>>>>>>> c1622b38cb999d6564f1c1ac1282bd7d8a1ce5ee
                        .HasColumnType("VARCHAR");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("VARCHAR");

                    b.Property<string>("Senha")
                        .IsRequired()
<<<<<<< HEAD
=======
                        .HasMaxLength(20)
>>>>>>> c1622b38cb999d6564f1c1ac1282bd7d8a1ce5ee
                        .HasColumnType("VARCHAR");

                    b.Property<bool>("Status_Sistema")
                        .HasColumnType("bit");

                    b.Property<string>("Telefone")
                        .IsRequired()
<<<<<<< HEAD
=======
                        .HasMaxLength(16)
>>>>>>> c1622b38cb999d6564f1c1ac1282bd7d8a1ce5ee
                        .HasColumnType("VARCHAR");

                    b.Property<string>("Tipo")
                        .IsRequired()
<<<<<<< HEAD
=======
                        .HasMaxLength(20)
>>>>>>> c1622b38cb999d6564f1c1ac1282bd7d8a1ce5ee
                        .HasColumnType("VARCHAR");

                    b.HasKey("Id");

                    b.HasIndex("Empresa_Id");

                    b.HasIndex("Endereco_Id")
                        .IsUnique();

                    b.ToTable("Usuarios");
                });

            modelBuilder.Entity("Backend.Models.UsuarioCompleto", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Bairro")
                        .IsRequired()
                        .HasMaxLength(65)
                        .HasColumnType("VARCHAR");

                    b.Property<string>("CEP")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("VARCHAR");

                    b.Property<string>("CPF")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("VARCHAR");

                    b.Property<int>("Codigo_Registro_Professor")
                        .HasColumnType("int");

                    b.Property<string>("Complemento")
                        .HasMaxLength(60)
                        .HasColumnType("VARCHAR");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("VARCHAR");

                    b.Property<string>("Genero")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("VARCHAR");

                    b.Property<string>("Localidade")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("VARCHAR");

                    b.Property<string>("Logradouro")
                        .IsRequired()
                        .HasMaxLength(55)
                        .HasColumnType("VARCHAR");

                    b.Property<string>("Matricula_Aluno")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("VARCHAR");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("VARCHAR");

                    b.Property<string>("Numero")
                        .IsRequired()
                        .HasMaxLength(8)
                        .HasColumnType("VARCHAR");

                    b.Property<string>("Senha")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("VARCHAR");

                    b.Property<bool>("Status_Sistema")
                        .HasColumnType("bit");

                    b.Property<string>("Telefone")
                        .IsRequired()
                        .HasMaxLength(16)
                        .HasColumnType("VARCHAR");

                    b.Property<string>("Tipo")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("VARCHAR");

                    b.Property<string>("UF")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("VARCHAR");

                    b.HasKey("Id");

                    b.ToTable("UsuarioCompleto");
                });

            modelBuilder.Entity("Backend.Models.Atendimento", b =>
                {
                    b.HasOne("Backend.Models.Usuario", "Aluno")
                        .WithMany("Atendimentos_Alunos")
                        .HasForeignKey("Aluno_Id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Backend.Models.Usuario", "Pedagogo")
                        .WithMany("Atendimentos_Pedagogos")
                        .HasForeignKey("Pedagogo_Id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Aluno");

                    b.Navigation("Pedagogo");
                });

            modelBuilder.Entity("Backend.Models.Avaliacao", b =>
                {
                    b.HasOne("Backend.Models.Usuario", "Professor")
                        .WithMany("Avaliacoes")
                        .HasForeignKey("Professor_Id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Professor");
                });

            modelBuilder.Entity("Backend.Models.Exercicio", b =>
                {
                    b.HasOne("Backend.Models.Usuario", "Aluno")
                        .WithMany("Exercicios_Alunos")
                        .HasForeignKey("Aluno_Id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Backend.Models.Usuario", "Professor")
                        .WithMany("Exercicios_Professores")
                        .HasForeignKey("Professor_Id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Aluno");

                    b.Navigation("Professor");
                });

            modelBuilder.Entity("Backend.Models.Log", b =>
                {
                    b.HasOne("Backend.Models.Usuario", "Usuario")
                        .WithMany("Logs")
                        .HasForeignKey("Usuario_Id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("Backend.Models.Usuario", b =>
                {
                    b.HasOne("Backend.Models.Empresa", "Empresa")
                        .WithMany("Usuarios")
                        .HasForeignKey("Empresa_Id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Backend.Models.Endereco", "Endereco")
                        .WithOne("Usuario")
                        .HasForeignKey("Backend.Models.Usuario", "Endereco_Id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Empresa");

                    b.Navigation("Endereco");
                });

            modelBuilder.Entity("Backend.Models.Empresa", b =>
                {
                    b.Navigation("Usuarios");
                });

            modelBuilder.Entity("Backend.Models.Endereco", b =>
                {
                    b.Navigation("Usuario")
                        .IsRequired();
                });

            modelBuilder.Entity("Backend.Models.Usuario", b =>
                {
                    b.Navigation("Atendimentos_Alunos");

                    b.Navigation("Atendimentos_Pedagogos");

                    b.Navigation("Avaliacoes");

                    b.Navigation("Exercicios_Alunos");

                    b.Navigation("Exercicios_Professores");

                    b.Navigation("Logs");
                });
#pragma warning restore 612, 618
        }
    }
}
